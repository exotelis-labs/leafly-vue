import{u as p,o as t,c,b as s,t as a,e as l,d as o,a as e}from"./app.95153213.js";const r=e(`<h1 id="development-guide" tabindex="-1">Development Guide <a class="header-anchor" href="#development-guide" aria-hidden="true">#</a></h1><p>For local development, you have to install the dependencies first:</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">$ npm ci</span></span>
<span class="line"></span></code></pre></div>`,3),i={class:"info custom-block"},y=s("p",{class:"custom-block-title"},"Note",-1),d=e(`<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>When committing your changes a pre commit git hook will run the following scripts: <code>lint</code> <code>types:check</code> <code>test:unit</code></p></div><h2 id="run-dev-server" tabindex="-1">Run dev server <a class="header-anchor" href="#run-dev-server" aria-hidden="true">#</a></h2><p>to start the dev server run:</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">$ npm run dev</span></span>
<span class="line"></span></code></pre></div>`,4),D=o("You might want to create an "),F=s("code",null,"index.html",-1),u=s("code",null,"index.html",-1),h=o(" and import whatever you want to test. The dev server is served at "),A=s("code",null,"http://localhost:5000/",-1),C=o(" by default."),g=e(`<p>To get started you can use this template:</p><div class="language-html"><button class="copy"></button><span class="lang">html</span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;!</span><span style="color:#F07178;">DOCTYPE</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">en</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">charset</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">UTF-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">viewport</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">width=device-width, initial-scale=1.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">leafly-vue</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;">&lt;!-- Import tailwind styles --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">@tailwind</span><span style="color:#A6ACCD;"> base</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">@tailwind</span><span style="color:#A6ACCD;"> components</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">@tailwind</span><span style="color:#A6ACCD;"> utilities</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">module</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createApp</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineComponent</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue/dist/vue.esm-bundler.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Tag</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./src/public_api</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> myApp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineComponent</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">components</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> Tag </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">&lt;Tag /&gt;</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> app </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createApp</span><span style="color:#A6ACCD;">(myApp)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">      app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">errorHandler</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">info</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">instance</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">info</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">      app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mount</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#app</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="build-for-production" tabindex="-1">Build for production <a class="header-anchor" href="#build-for-production" aria-hidden="true">#</a></h2>`,3),m=e(`<div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">$ npm run build</span></span>
<span class="line"></span></code></pre></div><p>The build command will not just bundle the library into optimized and minified files, it will also create declaration files. The output will be placed at <code>dist</code> folder. You may deploy this dist folder to any of your preferred platforms.</p><h2 id="run-unit-tests-with-vitest" tabindex="-1">Run Unit Tests with <a href="https://vitest.dev/" target="_blank" rel="noreferrer">Vitest</a> <a class="header-anchor" href="#run-unit-tests-with-vitest" aria-hidden="true">#</a></h2><p>Once you added new features are made some changes, you might want to run unit tests:</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">$ npm run test:unit</span></span>
<span class="line"></span></code></pre></div><p>you can also run the tests in &#39;watch&#39; mode. This mode will rerun the tests when your code changes.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">$ npm run test:unit:watch</span></span>
<span class="line"></span></code></pre></div><p>If you&#39;d like to document the code coverage simply run:</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">$ npm run test:unit:coverage</span></span>
<span class="line"></span></code></pre></div><p>The code coverage report can be found inside the <code>coverage</code> folder.</p><h2 id="lint-with-eslint" tabindex="-1">Lint with <a href="https://eslint.org/" target="_blank" rel="noreferrer">ESLint</a> <a class="header-anchor" href="#lint-with-eslint" aria-hidden="true">#</a></h2><p>To keep code quality high, we use ESLint to define some rules and implement a styleguide. The following command will check all source files for errors:</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">$ npm run lint</span></span>
<span class="line"></span></code></pre></div><p>If you&#39;d like to fix all errors automatically, please run:</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">$ npm run lint:fix</span></span>
<span class="line"></span></code></pre></div><h2 id="check-typescript" tabindex="-1">Check TypeScript <a class="header-anchor" href="#check-typescript" aria-hidden="true">#</a></h2><p>To check if all you types are correct run:</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">$ npm run types:check</span></span>
<span class="line"></span></code></pre></div><p>To export the type declarations to <code>dist</code> run:</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">$ npm run types:export</span></span>
<span class="line"></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Note</p><p>When building for production, the build command will automatically check and export your types.</p></div><h2 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-hidden="true">#</a></h2><p>Run the docs locally with the following command:</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">$ npm run docs:dev</span></span>
<span class="line"></span></code></pre></div><p>You may run this command to build the docs at <code>docs/.vitepress/dist</code>:</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">$ npm run docs:build</span></span>
<span class="line"></span></code></pre></div><p>Once you&#39;ve built the docs, you can test the production locally by running:</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">$ npm run docs:serve</span></span>
<span class="line"></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Note</p><p>When pushing changes to the <code>master</code> branch on GitHub, a workflow will automatically deploy the docs to <a href="https://exotelis-labs.github.io/leafly-vue" target="_blank" rel="noreferrer">GitHub pages</a></p></div><h2 id="visual-testing-with-storybook" tabindex="-1">Visual testing with <a href="https://storybook.js.org/" target="_blank" rel="noreferrer">Storybook</a> <a class="header-anchor" href="#visual-testing-with-storybook" aria-hidden="true">#</a></h2><p>Currently, we don&#39;t support Storybook anymore. It might be added again in the future.</p>`,31),b={id:"test-site-title-locally-in-another-package",tabindex:"-1"},_=s("a",{class:"header-anchor",href:"#test-site-title-locally-in-another-package","aria-hidden":"true"},"#",-1),v=e(`<div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">$ npm pack</span></span>
<span class="line"></span></code></pre></div><p>This command will create an archive with a name like <code>exotelis-labs-leafly-vue-1.0.0.tgz</code>. Open a project and add the following line to the <code>devDependencies</code> or <code>dependencies</code> of the <code>package.json</code>:</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">&quot;@exotelis-labs/leafly-vue&quot;: &quot;&lt;path-to-leafly-vue-on-your-pc&gt;/exotelis-labs-leafly-vue-1.0.0.tgz&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Check to use the correct version number when adding <code>@exotelis-labs/leafly-vue</code> to your <code>package.json</code></p></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Also check out <a href="https://docs.npmjs.com/cli/v8/commands/npm-link" target="_blank" rel="noreferrer">npm-link</a> if you want to test your changes more frequently.</p></div><h2 id="publish-new-version" tabindex="-1">Publish new version <a class="header-anchor" href="#publish-new-version" aria-hidden="true">#</a></h2><p>New versions will automatically be published by npm, when a new release on GitHub is created. Please see the <a href=".github/workflows/npm-publish.yml">GitHub workflow</a> for more details.</p>`,7),x=JSON.parse('{"title":"Development Guide","description":"","frontmatter":{},"headers":[],"relativePath":"guide/development-guide.md","lastUpdated":1664143011000}'),f={name:"guide/development-guide.md"},S=Object.assign(f,{setup(w){const{site:n}=p();return(T,k)=>(t(),c("div",null,[r,s("div",i,[y,s("p",null,a(l(n).title)+" was built and tested with Node 16",1)]),d,s("p",null,[D,F,o(" file, otherwise you wouldn't see anything. Since "+a(l(n).title)+" is a library we don't provide an actual app you can use. For testing purposes just create an ",1),u,h,A,C]),g,s("p",null,"Once you want to build "+a(l(n).title)+", run the following command:",1),m,s("h2",b,[o("Test "+a(l(n).title)+" locally in another package ",1),_]),s("p",null,"To test "+a(l(n).title)+" locally in another project run:",1),v]))}});export{x as __pageData,S as default};
